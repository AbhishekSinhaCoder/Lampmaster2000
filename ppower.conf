/*
 * This is an example configuration file, please change it to meet your
 * needs.  Remove the 'EXAMPLE' line below this comment after you are done
 * or the programs will warn you that you are trying to use the example. :)
 */

/*
 * The tty the daemon connects to the cm11a interface on.  This should be a
 * ttyS? device or a symlink to one.
 */
TTY "/dev/ttyS0"

/*
 * The directory to put the daemon's run-time files.  This is usually
 * /var/run but if you are running it single-user, you can use your home
 * directory or similar.  Make sure this is a non world-writable directory,
 * as pid file creation will follow symlinks and there is a race between old
 * socket file deletion and binding the new ones.
 */
DAEMON_DIR "/var/run"

/* 
 * The default modes for the command socket.  You don't want just anyone
 * turning your power on and off, so make sure you set the permissions
 * right.  The arguments here are the the mode of the socket and the user
 * and group to own the socket.  Access gives the ability to send commands
 * to the daemon.
 */
DAEMON_SOCKET 0660 "root" "root"

/*
 * The defaults modes for the monitor socket.   Be more liberal if you want
 * than with the command socket mode.  Access gives the ability to monitor
 * events the cm11a receives and check its status.  The daemon is designed
 * to not be stopped by evil use of monitor connections, but I'm new at
 * this, so be careful. :)
 */
DAEMON_MONITOR_SOCKET 0660 "root" "root"

/*
 * A timeout in seconds for programs run by the daemon with 'RUN' to finish
 * by.  If the program got stuck for some reason, the daemon will kill it
 * off for you.  A value of zero signifies no timeout.
 */
DAEMON_COMMAND_TIMEOUT 0

/*
 * The housecode the cm11a listens to by default.
 */
HOUSECODE A

/*
 * Info about the type of modules connected to your x10 network.  Ppower will
 * track the status of these modules so you should list every device you
 * have.  If there isn't a type for it yet, choose APPLIANCE.
 */
DEVICE A1 TRANSCEIVER
DEVICE A2 LAMP
DEVICE A3 APPLIANCE

/* 
 * 'SIGNAL' type devices are for addresses you use that don't have actual
 * x10 hardware on them but you still want the daemon to be able to handle. 
 * For instance, you could have your remote signal A9 when you want to
 * instruct the daemon to run a macro.
 */
DEVICE A9 SIGNAL

/*
 * Aliases for your devices.  The reason for aliases is that it is easier
 * remembering your room lights are 'lights' rather than A1 and A2.  These
 * are quite optional.
 */
ALIAS A1 light1
ALIAS A2 light2
ALIAS light1,light2 lights
ALIAS A3 fan
ALIAS A9 my_signal

/*
 * Example macro that is activated when the fan on A3 is turned on.
 */
MACRO fan_on (fan:ON) {
	
	/*
	 * This runs a UNIX command.  It tells root that it's getting too
	 * cold. :)
	 */
	RUN "echo 'Turn off the fan, it is too cold in here.' | mail root"
}

/* 
 * Example macro that is activated by turning A9 on which is defined as a
 * signal.  There is no real hardware defined attached to this, so it is
 * purely a signal to the daemon.  Note that we don't name this macro,
 * naming is optional.  It's a plus to name macros as then you can call them
 * by hand with the client, and you know which macros are being run.
 */
MACRO (my_signal:ON) {
	
	/* Writes a log message to /var/log/ppower-signal.log. */
	RUN "echo `date`: Signal cought. >> /var/log/ppower-signal.log"
}
